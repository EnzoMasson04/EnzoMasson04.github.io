[
    {
        "id": "bd5bcfd6",
        "type": "tab",
        "label": "TP4 - Partie 5 (D2 MQTT)",
        "disabled": false,
        "info": "MQTT -> JSON.parse -> extract -> timestamp (2 sorties) -> Dashboard + CSV (Dashboard 2)"
    },
    {
        "id": "5a11913e",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "JSON.parse()",
        "func": "try {\n    if (typeof msg.payload === \"string\") { msg.payload = JSON.parse(msg.payload); }\n    return msg;\n} catch(e) {\n    // convert numeric strings\n    if (!isNaN(Number(msg.payload))) { msg.payload = Number(msg.payload); return msg; }\n    node.warn(\"JSON parse error: \" + e.message);\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 420,
        "wires": [
            [
                "b403d52d",
                "c111bffc",
                "4d68dbf0"
            ]
        ]
    },
    {
        "id": "98f3686c",
        "type": "mqtt in",
        "z": "bd5bcfd6",
        "name": "light",
        "topic": "/merakimv/Q2GV-LNY7-QTMZ/light",
        "qos": "0",
        "datatype": "auto",
        "broker": "3b3466df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "5a11913e"
            ]
        ]
    },
    {
        "id": "b403d52d",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "getLux",
        "func": "msg.payload = Number(msg.payload.lux); return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 160,
        "wires": [
            [
                "c209caae"
            ]
        ]
    },
    {
        "id": "c209caae",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "TSLuminosity",
        "func": "var now = new Date();\nfunction two(n){return (n<10?(\"0\"+n):(\"\"+n));}\nvar date = two(now.getDate())+\"/\"+two(now.getMonth()+1)+\"/\"+now.getFullYear();\nvar heure = two(now.getHours())+\":\"+two(now.getMinutes())+\":\"+two(now.getSeconds());\nvar msg1 = {}, msg2 = {}, temp = {\"date\":date, \"heure\":heure, \"lux\": msg.payload};\n// sortie 1: objet structuré\nmsg1.payload = temp;\n// sortie 2: texte\nmsg2.payload = \"Le \" + temp.date + \" à \" + temp.heure + \" lux=\" + temp[\"lux\"];\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "ca7496ec",
                "56a84357"
            ],
            [
                "861817f6",
                "17b7b98e"
            ]
        ]
    },
    {
        "id": "861817f6",
        "type": "ui-text",
        "z": "bd5bcfd6",
        "group": "be26c1fb",
        "order": 122,
        "width": 0,
        "height": 0,
        "name": "Le",
        "label": "Le",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "ca7496ec",
        "type": "csv",
        "z": "bd5bcfd6",
        "name": "toCSV Luminosity",
        "sep": ";",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 930,
        "y": 120,
        "wires": [
            [
                "002082f8"
            ]
        ]
    },
    {
        "id": "002082f8",
        "type": "file",
        "z": "bd5bcfd6",
        "name": "Write Luminosity",
        "filename": "data_luminosity.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1140,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "17b7b98e",
        "type": "debug",
        "z": "bd5bcfd6",
        "name": "debug Luminosity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 180,
        "wires": []
    },
    {
        "id": "3107b521",
        "type": "mqtt in",
        "z": "bd5bcfd6",
        "name": "Level",
        "topic": "BTB_Utilities/Water/Bulk_Tank_1/Level",
        "qos": "0",
        "datatype": "auto",
        "broker": "3b3466df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "5a11913e"
            ]
        ]
    },
    {
        "id": "c111bffc",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "getTankLevel",
        "func": "msg.payload = Number(msg.payload); return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 420,
        "wires": [
            [
                "b1e1848e"
            ]
        ]
    },
    {
        "id": "b1e1848e",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "TSTankLevel",
        "func": "var now = new Date();\nfunction two(n){return (n<10?(\"0\"+n):(\"\"+n));}\nvar date = two(now.getDate())+\"/\"+two(now.getMonth()+1)+\"/\"+now.getFullYear();\nvar heure = two(now.getHours())+\":\"+two(now.getMinutes())+\":\"+two(now.getSeconds());\nvar msg1 = {}, msg2 = {}, temp = {\"date\":date, \"heure\":heure, \"tankLevel\": msg.payload};\n// sortie 1: objet structuré\nmsg1.payload = temp;\n// sortie 2: texte\nmsg2.payload = \"Le \" + temp.date + \" à \" + temp.heure + \" tankLevel=\" + temp[\"tankLevel\"];\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 900,
        "y": 420,
        "wires": [
            [
                "4bd602e6",
                "de39e5f0"
            ],
            [
                "e611c506",
                "b4e42f5e"
            ]
        ]
    },
    {
        "id": "e611c506",
        "type": "ui-text",
        "z": "bd5bcfd6",
        "group": "be26c1fb",
        "order": 142,
        "width": 0,
        "height": 0,
        "name": "Le",
        "label": "Le",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "4bd602e6",
        "type": "csv",
        "z": "bd5bcfd6",
        "name": "toCSV Tank Level",
        "sep": ";",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "fb0b59da"
            ]
        ]
    },
    {
        "id": "fb0b59da",
        "type": "file",
        "z": "bd5bcfd6",
        "name": "Write Tank Level",
        "filename": "data_tank_level.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1340,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b4e42f5e",
        "type": "debug",
        "z": "bd5bcfd6",
        "name": "debug Tank Level",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1150,
        "y": 420,
        "wires": []
    },
    {
        "id": "be9a4dd3",
        "type": "mqtt in",
        "z": "bd5bcfd6",
        "name": "audio_analytics",
        "topic": "/merakimv/Q2SV-FM73-WPJM/audio_analytics",
        "qos": "0",
        "datatype": "auto",
        "broker": "3b3466df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 620,
        "wires": [
            [
                "5a11913e"
            ]
        ]
    },
    {
        "id": "4d68dbf0",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "getAudioLevel",
        "func": "msg.payload = { ts: msg.payload.ts, audioLevel: Number(msg.payload.audioLevel) }; return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 680,
        "wires": [
            [
                "e6e85635"
            ]
        ]
    },
    {
        "id": "e6e85635",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "TSAudioLevel",
        "func": "var msg1 = {}; var msg2 = {};\nvar temp = {\"timeStamp\": msg.payload.ts, \"audioLevel\": msg.payload.audioLevel};\n// sortie 1: objet structuré\nmsg1.payload = temp;\n// sortie 2: texte\nmsg2.payload = \"Le \" + temp.timeStamp + \" audioLevel=\" + temp.audioLevel;\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 720,
        "y": 680,
        "wires": [
            [
                "56703e4e",
                "49d3a1b6"
            ],
            [
                "476817da",
                "f6c13d3e"
            ]
        ]
    },
    {
        "id": "476817da",
        "type": "ui-text",
        "z": "bd5bcfd6",
        "group": "be26c1fb",
        "order": 162,
        "width": 0,
        "height": 0,
        "name": "Le",
        "label": "Le",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 970,
        "y": 740,
        "wires": []
    },
    {
        "id": "56703e4e",
        "type": "csv",
        "z": "bd5bcfd6",
        "name": "toCSV AudioLevel",
        "sep": ";",
        "hdrin": "",
        "hdrout": "once",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 970,
        "y": 620,
        "wires": [
            [
                "3537d73a"
            ]
        ]
    },
    {
        "id": "3537d73a",
        "type": "file",
        "z": "bd5bcfd6",
        "name": "Write AudioLevel",
        "filename": "data_audiolevel.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1190,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f6c13d3e",
        "type": "debug",
        "z": "bd5bcfd6",
        "name": "debug AudioLevel",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 970,
        "y": 680,
        "wires": []
    },
    {
        "id": "540a2fe1",
        "type": "ui-chart",
        "z": "bd5bcfd6",
        "group": "be26c1fb",
        "name": "Luminosity",
        "label": "Luminosity",
        "order": 10,
        "chartType": "line",
        "category": "",
        "categoryType": "msg",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "",
        "yAxisPropertyType": "property",
        "ymin": "",
        "ymax": "",
        "bins": "",
        "stackSeries": false,
        "pointRadius": "",
        "showLegend": true,
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": 0,
        "height": 0,
        "className": "",
        "interpolation": "linear",
        "x": 1050,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "50ace953",
        "type": "ui-gauge",
        "z": "bd5bcfd6",
        "name": "Tank Level",
        "group": "be26c1fb",
        "order": 20,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Tank Level",
        "min": 0,
        "max": 1000,
        "x": 1310,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6662958c",
        "type": "ui-chart",
        "z": "bd5bcfd6",
        "group": "be26c1fb",
        "name": "AudioLevel",
        "label": "AudioLevel",
        "order": 30,
        "chartType": "line",
        "removeOlder": 1,
        "removeOlderUnit": "3600",
        "width": 0,
        "height": 0,
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "56a84357",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "Value only (Lux)",
        "func": "if (msg.payload && msg.payload['lux'] !== undefined) msg.payload = msg.payload['lux']; return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 60,
        "wires": [
            [
                "540a2fe1"
            ]
        ]
    },
    {
        "id": "de39e5f0",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "Value only (Tank)",
        "func": "if (msg.payload && msg.payload['tankLevel'] !== undefined) msg.payload = msg.payload['tankLevel']; return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 300,
        "wires": [
            [
                "50ace953"
            ]
        ]
    },
    {
        "id": "49d3a1b6",
        "type": "function",
        "z": "bd5bcfd6",
        "name": "Value only (Audio)",
        "func": "if (msg.payload && msg.payload['audioLevel'] !== undefined) msg.payload = msg.payload['audioLevel']; return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 560,
        "wires": [
            [
                "6662958c"
            ]
        ]
    },
    {
        "id": "3b3466df",
        "type": "mqtt-broker",
        "name": "test.mosquitto.org",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "be26c1fb",
        "type": "ui-group",
        "z": "bd5bcfd6",
        "name": "Le groupe",
        "page": "20058d97",
        "width": "6",
        "height": "",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "20058d97",
        "type": "ui-page",
        "z": "bd5bcfd6",
        "name": "Test",
        "ui": "f746718a91ceec7b",
        "path": "",
        "icon": "dashboard",
        "layout": "grid",
        "theme": "",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f746718a91ceec7b",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": false
    },
    {
        "id": "c2474ff466e760ab",
        "type": "global-config",
        "env": [],
        "modules": {
            "@flowfuse/node-red-dashboard": "1.29.0"
        }
    }
]